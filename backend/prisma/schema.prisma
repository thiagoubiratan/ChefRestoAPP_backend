// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Criar um migration yarn prisma migrate dev
model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  email     String    @unique
  name      String
  password  String

  @@map("users")
}

model Category {
  id        Int       @id @default(autoincrement())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  name      String

  products Product[]

  @@map("categories")
}

model Product {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now())
  name        String
  price       Float
  description String
  banner      String

  category    Category @relation(fields: [category_id], references: [id])
  category_id Int

  items Item[]

  @@map("products")
}

model Order {
  id        Int       @id @default(autoincrement())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  table     Int
  status    Boolean   @default(false)
  draft     Boolean   @default(true)

  items Item[]

  @@map("orders")
}

model Item {
  id        Int       @id @default(autoincrement())
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  amount    Int

  order   Order   @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  order_id   Int
  product_id Int

  @@map("items")
}
